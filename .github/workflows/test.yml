on:
  workflow_run:
    workflows: ["Dev", "Uat", "Pro"]
    types:
      - completed

env:
  dotnetVersion: |
    3.1.101
    5.x
    6.x

jobs:
  test-unit-ui:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.workflow_run.name }}
    outputs:
      sourceHeadRepo: ${{ steps.source-run-info.outputs.sourceHeadRepo }}
      sourceHeadBranch: ${{ steps.source-run-info.outputs.sourceHeadBranch }}
      sourceHeadSha: ${{ steps.source-run-info.outputs.sourceHeadSha }}
      mergeCommitSha: ${{ steps.source-run-info.outputs.mergeCommitSha }}
      targetCommitSha: ${{ steps.source-run-info.outputs.targetCommitSha }}
      pullRequestNumber: ${{ steps.source-run-info.outputs.pullRequestNumber }}
      pullRequestLabels: ${{ steps.source-run-info.outputs.pullRequestLabels }}
      targetBranch: ${{ steps.source-run-info.outputs.targetBranch }}
      sourceEvent: ${{ steps.source-run-info.outputs.sourceEvent }}

    steps:
      - env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo $EVENT_CONTEXT

      - name: "Get information about the origin 'CI' run"
        uses: potiuk/get-workflow-origin@v1_1
        id: source-run-info
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}

      - run: echo 'SourceEvent ${{ steps.source-run-info.outputs.sourceEvent }}'  

      - name: "Echo on push"
        if: ${{ steps.source-run-info.outputs.sourceEvent == 'push' }}
        run: echo 'PUSH'

      - name: "Echo on pull_request" 
        if: ${{ steps.source-run-info.outputs.sourceEvent == 'pull_request' }}  
        run: echo 'PULL REQUEST!!!'
      
      - uses: actions/github-script@v5
        id: update-check-run
        if: ${{ steps.source-run-info.outputs.sourceEvent == 'pull_request' }}  
        env:
          number: ${{ steps.source-run-info.outputs.pullRequestNumber }}
          job: ${{ github.job }}
          # Conveniently, job.status maps to https://developer.github.com/v3/checks/runs/#update-a-check-run
          conclusion: ${{ job.status }} 
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pull } = await github.rest.pulls.get({
              ...context.repo,
              pull_number: process.env.number
            });
            const ref = pull.head.sha;
            console.log('sha pull head:' + pull.head.sha);

            const { data: checks } = await github.rest.checks.listForRef({
              ...context.repo,
              ref
            });

            console.log(...checks.check_runs.map(element => element.name)); 
             
            const check = checks.check_runs.filter(c => c.name === process.env.job);
            const { data: result } = await github.rest.checks.update({
              ...context.repo,
              check_run_id: check[0].id,
              status: 'completed',
              conclusion: process.env.conclusion
            });
            return result;
      # - name: Download artifact
      #   id: download-artifact
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     workflow: build.yml
      #     workflow_conclusion: success
          

      # # - name: Variable Substitution
      # #   uses: microsoft/variable-substitution@v1
      # #   with:
      # #    # comma separated list of XML/JSON/YAML files in which tokens are to be substituted. Files names must be specified relative to the folder-path.
      # #      files: 'Sample.AspNetCore/appsettings.json, Sample.AspNetCore/ngrok.yml, Sample.AspNetCore.SystemTests/appsettings.json'
      # #   env:
      # #     Credentials.0.MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID }}
      # #     Credentials.0.Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
      # #     Credentials.1.MerchantId: ${{ secrets.NORWAY_MERCHANT_ID }}
      # #     Credentials.1.Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
      # #     Credentials.2.MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
      # #     Credentials.2.Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}
      # #     MerchantSettings.PushUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/api/svea/push/{checkout.order.uri}/?marketId={marketId}
      # #     MerchantSettings.TermsUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/terms
      # #     MerchantSettings.CheckoutUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/CheckOut/LoadPaymentMenu
      # #     MerchantSettings.ConfirmationUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/checkout/thankyou
      # #     MerchantSettings.CheckoutValidationCallbackUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/api/svea/validation/{checkout.order.uri}/?marketId={marketId}

      # - name: Setup .NET
      #   uses: actions/setup-dotnet@v2
      #   with:
      #     dotnet-version: ${{ env.dotnetVersion }}       

      # # - name: Install dependencies
      # #   run: dotnet restore ${{ env.SlnPath }}

      # # - name: Run Unit Tests
      # #   run: dotnet test src/Svea.WebPay.SDK.Tests/Svea.WebPay.SDK.Tests.csproj
      # #   env:
      # #     Credentials:0:MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID}}
      # #     Credentials:0:Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
      # #     Credentials:1:MerchantId: ${{ secrets.NORWAY_MERCHANT_ID}}
      # #     Credentials:1:Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
      # #     Credentials:2:MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
      # #     Credentials:2:Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}

      # - name: Setup ngrok
      #   #if: ${{ github.event_name != 'pull_request' }}
      #   run: |
      #     wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
      #     jar xvf ngrok-stable-linux-amd64.zip
      #     chmod +x ngrok
          
      # - name: Start ngrok
      #   #if: ${{ github.event_name != 'pull_request' }}
      #   run: |
      #     ./ngrok authtoken ${{ secrets.NGROK_AUTHTOKEN }}
      #     ./ngrok start -config Sample.AspNetCore/ngrok.yml uitestdev &
                   
      # - name: Start SDK Sample project
      #   #if: ${{ github.event_name != 'pull_request' }}
      #   working-directory: Sample.AspNetCore
      #   run:
      #       dotnet Sample.AspNetCore.dll &
      #   env:
      #     Credentials:0:MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID}}
      #     Credentials:0:Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
      #     Credentials:1:MerchantId: ${{ secrets.NORWAY_MERCHANT_ID}}
      #     Credentials:1:Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
      #     Credentials:2:MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
      #     Credentials:2:Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}
      #     MerchantSettings:PushUri: https://uitest-dev-svea-webpay-sdk.eu.ngrok.io/api/svea/push/{checkout.order.uri}/?marketId={marketId}
      #     MerchantSettings:TermsUri: https://uitest-dev-svea-webpay-sdk.eu.ngrok.io/terms
      #     MerchantSettings:CheckoutUri: https://uitest-dev-svea-webpay-sdk.eu.ngrok.io/CheckOut/LoadPaymentMenu
      #     MerchantSettings:ConfirmationUri: https://uitest-dev-svea-webpay-sdk.eu.ngrok.io/checkout/thankyou
      #     MerchantSettings:CheckoutValidationCallbackUri: https://uitest-dev-svea-webpay-sdk.eu.ngrok.io/api/svea/validation/{checkout.order.uri}/?marketId={marketId}
      

      # - name: Run SDK UI tests
      #   #if: ${{ github.event_name != 'pull_request' && needs.variables.outputs.ENVIRONMENT != 'dev'}}
      #   run: dotnet test Sample.AspNetCore.SystemTests/Sample.AspNetCore.SystemTests.dll
      #   env:
      #     Credentials:0:MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID}}
      #     Credentials:0:Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
      #     Credentials:1:MerchantId: ${{ secrets.NORWAY_MERCHANT_ID}}
      #     Credentials:1:Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
      #     Credentials:2:MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
      #     Credentials:2:Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}
      #     SampleWebsite:Url: https://localhost:5001
                

  publish_alpha_nuget:
    needs: [test-unit-ui]
    if: ${{ needs.test-unit-ui.outputs.sourceEvent != 'pull_request' && github.event.workflow_run.name == 'Dev' }}
    name: Publish alpha nuget
    runs-on: ubuntu-latest
    environment: ${{ github.event.workflow_run.name }}

    steps:
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          workflow_conclusion: success
    
      # - name: Publish test package to GitHub Package Registry
      #   run: dotnet nuget push "packages/*.nupkg" --api-key ${{secrets.GITHUB_TOKEN}} --source  https://nuget.pkg.github.com/sveawebpay/index.json --skip-duplicate
  
  publish_sample_site:
    needs: [test-unit-ui]
    if: ${{ needs.test-unit-ui.outputs.sourceEvent != 'pull_request' }}  
    name: Publish sample site
    runs-on: ubuntu-latest
    environment: ${{ github.event.workflow_run.name }}

    steps:
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          workflow_conclusion: success
    
      # - name: 'Run Azure webapp deploy using publish profile credentials'
      #   uses: azure/webapps-deploy@v2
      #   with: 
      #     app-name: ${{ secrets.AZURE_WEBAPP_NAME }} # Replace with your app name
      #     publish-profile: ${{ secrets.AZURE_WEBAPP_DEV_PUBLISH_PROFILE }} # Define secret variable in repository settings as per action documentation
      #     package: 'Sample.AspNetCore'