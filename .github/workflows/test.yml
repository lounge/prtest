on:
  workflow_run:
    workflows: ["Dev", "Uat", "Pro"]
    types:
      - completed

env:
  dotnetVersion: |
    3.1.101
    5.x
    6.x

jobs:
  test:
    environment: ${{ github.event.workflow_run.name }}
    name: Run Unit and UI tests
    runs-on: ubuntu-latest
    
    steps:
      - run: echo 'Workflow_run.name ${{ github.event.workflow_run.name }}'
      - run: echo ${{secrets.SWEDEN_MERCHANT_ID }} | sed 's/./& /g'
      - run: echo 'Github event_name ${{ github.event_name }}'


      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yml
          workflow_conclusion: success
          

      # - name: Variable Substitution
      #   uses: microsoft/variable-substitution@v1
      #   with:
      #    # comma separated list of XML/JSON/YAML files in which tokens are to be substituted. Files names must be specified relative to the folder-path.
      #      files: 'Sample.AspNetCore/appsettings.json, Sample.AspNetCore/ngrok.yml, Sample.AspNetCore.SystemTests/appsettings.json'
      #   env:
      #     Credentials.0.MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID }}
      #     Credentials.0.Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
      #     Credentials.1.MerchantId: ${{ secrets.NORWAY_MERCHANT_ID }}
      #     Credentials.1.Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
      #     Credentials.2.MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
      #     Credentials.2.Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}
      #     MerchantSettings.PushUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/api/svea/push/{checkout.order.uri}/?marketId={marketId}
      #     MerchantSettings.TermsUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/terms
      #     MerchantSettings.CheckoutUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/CheckOut/LoadPaymentMenu
      #     MerchantSettings.ConfirmationUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/checkout/thankyou
      #     MerchantSettings.CheckoutValidationCallbackUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/api/svea/validation/{checkout.order.uri}/?marketId={marketId}

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.dotnetVersion }}       

      # - name: Install dependencies
      #   run: dotnet restore ${{ env.SlnPath }}

      # - name: Run Unit Tests
      #   run: dotnet test src/Svea.WebPay.SDK.Tests/Svea.WebPay.SDK.Tests.csproj
      #   env:
      #     Credentials:0:MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID}}
      #     Credentials:0:Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
      #     Credentials:1:MerchantId: ${{ secrets.NORWAY_MERCHANT_ID}}
      #     Credentials:1:Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
      #     Credentials:2:MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
      #     Credentials:2:Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}

      - name: Setup ngrok
        #if: ${{ github.event_name != 'pull_request' }}
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          jar xvf ngrok-stable-linux-amd64.zip
          chmod +x ngrok
          
      - name: Start ngrok
        #if: ${{ github.event_name != 'pull_request' }}
        run: |
          ./ngrok authtoken ${{ secrets.NGROK_AUTHTOKEN }}
          ./ngrok start -config Sample.AspNetCore/ngrok.yml uitestdev &
                   
      - name: Start SDK Sample project
        #if: ${{ github.event_name != 'pull_request' }}
        working-directory: Sample.AspNetCore
        run:
            dotnet Sample.AspNetCore.dll &
        env:
          Credentials:0:MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID}}
          Credentials:0:Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
          Credentials:1:MerchantId: ${{ secrets.NORWAY_MERCHANT_ID}}
          Credentials:1:Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
          Credentials:2:MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
          Credentials:2:Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}
          MerchantSettings:PushUri: https://uitest-dev-svea-webpay-sdk.eu.ngrok.io/api/svea/push/{checkout.order.uri}/?marketId={marketId}
          MerchantSettings:TermsUri: https://uitest-dev-svea-webpay-sdk.eu.ngrok.io/terms
          MerchantSettings:CheckoutUri: https://uitest-dev-svea-webpay-sdk.eu.ngrok.io/CheckOut/LoadPaymentMenu
          MerchantSettings:ConfirmationUri: https://uitest-dev-svea-webpay-sdk.eu.ngrok.io/checkout/thankyou
          MerchantSettings:CheckoutValidationCallbackUri: https://uitest-dev-svea-webpay-sdk.eu.ngrok.io/api/svea/validation/{checkout.order.uri}/?marketId={marketId}
      

      - name: Run SDK UI tests
        #if: ${{ github.event_name != 'pull_request' && needs.variables.outputs.ENVIRONMENT != 'dev'}}
        run: dotnet test Sample.AspNetCore.SystemTests/Sample.AspNetCore.SystemTests.dll
        env:
          Credentials:0:MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID}}
          Credentials:0:Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
          Credentials:1:MerchantId: ${{ secrets.NORWAY_MERCHANT_ID}}
          Credentials:1:Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
          Credentials:2:MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
          Credentials:2:Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}
          SampleWebsite:Url: https://localhost:5001
                

  # publish_test_nuget:
  #   #if: ${{ github.event_name != 'pull_request' && needs.variables.outputs.ENVIRONMENT == 'dev'}}
  #   name: Build and publish alpha nuget
  #   needs: [test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3 
      
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v2
              
  #     - name: Install dependencies
  #       run: dotnet restore ${{ env.SlnPath }}

  #     - name: Build Solution
  #       run: dotnet build ${{ env.SlnPath }} -p:Version=${{ needs.variables.outputs.NUGETVERSIONV2 }}  --configuration ${{ env.Configuration }} --no-restore
      
  #     - name: Nuget pack
  #       run: dotnet pack ${{ env.CsprojPath }} -p:PackageVersion=${{ needs.variables.outputs.NUGETVERSIONV2 }} -p:Version=${{ needs.variables.outputs.NUGETVERSIONV2 }} --configuration=${{ env.Configuration }} --output=artifacts